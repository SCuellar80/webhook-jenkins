
pipeline
{
    agent any
    stages
    {
        stage('Git clone') 
        {
            steps 
            {
                git branch: 'main', poll: false, url: 'https://github.com/SCuellar80/webhook-test.git'
            }
        }


        stage('Test and results')
        {
            steps
            {
                script
                {
                // Usar catchError para manejar fallos sin que afecten al pipeline
                    //echo catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
                    {
                        bat 'C:\\Users\\copca\\OneDrive\\Trainings\\Ex_Files_Using_Python_for_Automation\\Challenges\\pythonProject\\.venv\\Scripts\\pytest "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\First pipeline triggered by GitHub\\pytestdir\\parametrized.py" --junitxml=TestResults.xml'

                    }
                }

            }
        }

        stage('Results')
        {
            steps
            {
                echo 'Post always test results'
                junit 'TestResults.xml'
            }

        }

    }
}
